name: Deploy to caprover instance

env:
  CONTEXT_DIR: "./"
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE: ./Dockerfile
  DOCKER_REGISTRY: ghcr.io
  NODE_VERSION: "18"

on:
  push:
    branches:
      - Backend

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/next/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./next/package-lock.json"

      - name: Install dependencies
        working-directory: ./next
        run: npm ci

      - name: Build
        working-directory: ./next
        run: npm run build

      - name: Test
        working-directory: ./next
        run: npm run test --if-present

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Check secrets
        run: |
          if [ -z "${{ secrets.CAPROVER_SERVER }}" ]; then echo "CAPROVER_SERVER is not set"; else echo "CAPROVER_SERVER is [OK]"; fi
          if [ -z "${{ secrets.APP_TOKEN }}" ]; then echo "APP_TOKEN is not set"; else echo "APP_TOKEN is [OK]"; fi
          if [ -z "${{ secrets.APP_NAME }}" ]; then echo "APP_NAME is not set"; else echo "APP_NAME is [OK]"; fi

      - name: Debug Image Tag
        run: |
          echo "Generated Tag: ${{ steps.meta.outputs.tags }}"

      - name: Deploy to CapRover
        run: |
          docker run caprover/cli-caprover:latest caprover deploy \
            --caproverUrl ${{ secrets.CAPROVER_SERVER }} \
            --appName ${{ secrets.APP_NAME }} \
            --appToken ${{ secrets.APP_TOKEN }} \
            --imageName ${{ steps.meta.outputs.tags }}
